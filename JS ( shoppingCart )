import { LightningElement,wire,track } from 'lwc';
import { subscribe, MessageContext } from 'lightning/messageService';
import { ShowToastEvent } from 'lightning/platformShowToastEvent';
import PRODUCT_CART from '@salesforce/messageChannel/Recordfor_Cart__c';
import shoppingList from '@salesforce/apex/shoppingCart.cartProduct';
import Order from '@salesforce/apex/shoppingCart.MakeOrder';
export default class MyShoppingCart extends LightningElement {

  @track columns = [
    { label: 'Name', fieldName: 'Name', type: 'text', },
    { label: 'Price', fieldName: 'Price__c', type: 'currency' }
];
    subscription = null;
    @track productcartid;
    @track productlist=[];
    @track productDetail;
    @track totalPrice=0;
    @track error;
    //@track data;
    @wire(MessageContext)
    messageContext;
    subscribeToMessageChannel() {
      this.subscription = subscribe(
        this.messageContext,
        PRODUCT_CART,
        (message) => this.handleMessage(message)
      );
    }
    
    handleMessage(message) {
      this.productcartid=message.proid;
      this.productlist.push(this.productcartid);
      let eprice=0;
      let ttl=0;
      shoppingList({myproidlist : this.productlist}).then(result => {
        this.productDetail=result;
        this.productDetail.forEach(pr => {
          eprice= pr.Price__c;
          ttl=ttl+eprice;  
        });
        this.totalPrice=ttl;
        console.log(ttl);
      }).catch(error => {
        this.error = error;
      });
    }
    
    connectedCallback() {
      this.subscribeToMessageChannel();
    }
    handleShow(event) {
      this.productlist = [];
      this.template.querySelector('lightning-datatable').data = null;
      this.totalPrice = 0;
    
      const toastEvent = new ShowToastEvent({
        title: 'All Gone!!',
        message: 'Your cart cleaned!',
        variant: 'error'
      });
      this.dispatchEvent(toastEvent);
    }
    
    @track order;
    handleOrder(){
      Order({myproidlist:this.productlist})
      .then( result =>{
          this.order = result;
          const toastEvent = new ShowToastEvent({
              title: 'Success!',
              message: 'Your order has been created',
              variant: 'success'
          });
          this.dispatchEvent(toastEvent);
          this.productlist = [];
          this.template.querySelector('lightning-datatable').data = null;
          this.totalPrice = 0;
      }) 
      .catch(error => {
          this.error = error;
      });
  }  
}
